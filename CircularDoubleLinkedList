import java.util.*;
class Node
{
int data;
Node next,prev;
	
Node(int x)
{
data=x;
prev=null;
next=null;
}
}
class DoubleList
{
Node head,tail;
DoubleList()
{
head=tail=null;
}
void create(int x)
{
Node n=new Node(x);
if(head==null)
head=tail=n;
else
{
tail.next=n;
n.prev=tail;
tail=n;
}
}
void rshow()
{
if(head==null)
{
head=n;
n.prev=head;
n.next=head;
}
else{
temp=head;
while(temp.next!=head){
temp=temp.next;
n.prev=temp;
n.next=head;
head.prev=n;
temp.next=n;
System.out.println("List is empty");
return;
}
Node temp=head;
while(temp!=null)
{
System.out.print(temp.data+" ");
temp=temp.next;
}
}
void lshow()
{
if(head==null)
{
System.out.println("List is empty");
return;
}
Node temp=tail;
while(temp!=null)
{
System.out.print(temp.data+" ");
temp=temp.prev;
}
}
void insertFirst(int x)
{
Node n=new Node(x);
if(head==null)
head=tail=n;
else
{
head.prev=n;
n.next=head;
head=n;
}
}
void insertPosition(int x,int pos)
{
Node n=new Node(x);
if(head==null)
head=n;
n.prev=head;
n.next=head;
else if(pos==1)
{
n.prev=head.prev;
n.next=head;
head.prev.next=n;
head.prev=n;
head=n;
}
else
{
c=2;
temp=head;
while(c<pos&&temp.next!=head)
{
c=c+1;
temp=temp.next;
if(temp.next==head)
{
n.prev=temp;
n.next=head;
temp.next=n;
head.prev=n;
}
else
{
n.prev=temp;
n.next=temp.next;
temp.next.prev=n;
temp.next=n;
}
}
void deleteFirst()
{
if(head==null)
{
System.out.print("List is empty");
return;
}
if(head.next==head){
head=null;
}
else
{
head.next.prev=head.prev;
head.prev.next=head.next;
head=head.next;
}
}
void deleteLast()
if(head==null)
{
System.out.println("List is empty");
return;
}
if(head.next==head){
head=null;
}
else
{
temp=head;
while(temp.next!=head)
{
temp=temp.next;
head.prev=temp;
temp.next=head;
}
}
void deletePosition(int pos)
{
if(head==null)
{
System.out.print("List is empty");
return;
}
int c=1;
Node temp=head;
while(c<pos && temp.next!=null)
{
c=c+1;
temp=temp.next;
}
if(temp.next==null)
{
temp.prev.next=null;
tail=temp.prev;
temp=null;
}
else
{
temp.prev.next=temp.next;
temp.next.prev=temp.prev;
temp=null;
}
}
}
class DoubleLinkedList
{
public static void main(String args[])
{
Scanner s=new Scanner(System.in);
DoubleList d1=new DoubleList();
for(;;)
{
	System.out.println();
	System.out.println("1.Create\n2.Print\n3.InsertFirst\n4.Insert Position\n5.Delete First\n6.Delete Last\n7.Delete Position\n8.Exit");
	System.out.println("Enter your choice");
	int ch=s.nextInt();
	if(ch==1)
	{
	   System.out.println("Enter an element");
	   int x=s.nextInt();
	   d1.create(x);
	}
	else if(ch==2)
	{
	   System.out.println("Which way to traverse\n 1.Forward\n2.Backward");
	   int r=s.nextInt();
	   if(r==1)
		d1.rshow();
	   else if(r==2)
		d1.lshow();
	   else
		System.out.println("Invalid choice");
	}
	else if(ch==3)
	{
		System.out.println("Enter an element");
		int x=s.nextInt();
		d1.insertFirst(x);
	}
	else if(ch==4)
	{
	   System.out.println("Enter element and position");
		int x=s.nextInt();
		int pos=s.nextInt();
		d1.insertPosition(x,pos);
	}
	else if(ch==5)
		d1.deleteFirst();
	else if(ch==6)
		d1.deleteLast();
	else if(ch==7)
	{
	     System.out.println("Enter position to delete");
		int pos=s.nextInt();
		d1.deletePosition(pos);
	}
	else if(ch==8)
		break;
	else
	    System.out.println("Wrong choice");
    }
}
}
